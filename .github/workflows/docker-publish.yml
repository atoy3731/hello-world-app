name: Docker

on:
  push:
    branches:
      - master

    tags:
      - v*

  pull_request:

env:
  IMAGE_NAME: atoy3731/hello-world
  CHART_REPO_ORG: atoy3731
  CHART_REPO_NAME: hello-world-manifests
jobs:
  # Test: Either run Docker-based tests or do a simple Docker build to ensure it compiles.
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile --tag $IMAGE_NAME:${GITHUB_REF##*/}

          fi

  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      # Build: Build the Docker image with a temporary tag.
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      # Login: Log into Docker Hub using Github secrets.
      - name: Log into Docker
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin

      # Push: Retag the Docker image and push it to Docker Hub.
      - name: Push image to DockerHub
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          HASH=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 7 ; echo '')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION="$HASH"

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo "VERSION=$VERSION" >> $GITHUB_ENV

          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION

      # Update: Update the image tags in the app manifests for CI/CD to Kubernetes via ArgoCD.
      - name: Update image tags
        env:
          GIT_USER: ${{ secrets.GIT_USER }}
          GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
        run: |
          echo "VERSION=$VERSION"

          git config --global user.email "adam@alterus.io"
          git config --global user.name "Adam Toy"

          git clone "https://$GIT_USER:$GIT_PASSWORD@github.com/$CHART_REPO_ORG/$CHART_REPO_NAME.git"
          git checkout master

          cd "$CHART_REPO_NAME"
          sed -i -e "s/tag: \".*\"/tag: \"$VERSION\"/g" values.yaml
          git add values.yaml
          git commit -m "Update image tag to $VERSION"
          git push "https://$GIT_USER:$GIT_PASSWORD@github.com/$CHART_REPO_ORG/$CHART_REPO_NAME.git" master
